{"ast":null,"code":"const initialState = {\n  user: {\n    username: '',\n    password: '',\n    emailAddress: '',\n    firstName: '',\n    lastName: '',\n    authToken: ''\n  },\n  todolists: []\n};\n\nconst reducer = (state = initialState, action) => {\n  const newState = { ...state\n  };\n\n  if (action.type === 'STORE_USER') {\n    newState.user = action.value;\n    console.log('after action.type === STORE_USER: ' + JSON.stringify(newState));\n  }\n\n  if (action.type === 'STORE_LISTS') {\n    newState.todolists.push(action.value);\n    console.log('after action.type === STORE_LISTS: ' + JSON.stringify(newState));\n  }\n\n  return newState;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/jeremy/Job/Briqueterie/monRepo/Labriqueterie-test_technique/client/src/store/reducer.js"],"names":["initialState","user","username","password","emailAddress","firstName","lastName","authToken","todolists","reducer","state","action","newState","type","value","console","log","JSON","stringify","push"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,YAAY,EAAE,EAHV;AAIJC,IAAAA,SAAS,EAAE,EAJP;AAKJC,IAAAA,QAAQ,EAAE,EALN;AAMJC,IAAAA,SAAS,EAAE;AANP,GADa;AASnBC,EAAAA,SAAS,EAAE;AATQ,CAArB;;AAYA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAChD,QAAMC,QAAQ,GAAG,EAAC,GAAGF;AAAJ,GAAjB;;AACA,MAAIC,MAAM,CAACE,IAAP,KAAgB,YAApB,EAAkC;AAChCD,IAAAA,QAAQ,CAACX,IAAT,GAAgBU,MAAM,CAACG,KAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uCAAuCC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAAnD;AACD;;AACD,MAAID,MAAM,CAACE,IAAP,KAAgB,aAApB,EAAmC;AACjCD,IAAAA,QAAQ,CAACJ,SAAT,CAAmBW,IAAnB,CAAwBR,MAAM,CAACG,KAA/B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wCAAwCC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAApD;AACD;;AACD,SAAOA,QAAP;AACD,CAXD;;AAaA,eAAeH,OAAf","sourcesContent":["const initialState = {\n  user: {\n    username: '',\n    password: '',\n    emailAddress: '',\n    firstName: '',\n    lastName: '',\n    authToken: ''\n  },\n  todolists: []\n}\n\nconst reducer = (state = initialState, action) => {\n  const newState = {...state}\n  if (action.type === 'STORE_USER') {\n    newState.user = action.value\n    console.log('after action.type === STORE_USER: ' + JSON.stringify(newState))\n  }\n  if (action.type === 'STORE_LISTS') {\n    newState.todolists.push(action.value)\n    console.log('after action.type === STORE_LISTS: ' + JSON.stringify(newState))\n  }\n  return newState\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}