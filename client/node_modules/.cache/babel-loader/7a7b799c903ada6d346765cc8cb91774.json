{"ast":null,"code":"var _jsxFileName = \"/home/jeremy/Job/Briqueterie/monRepo/Labriqueterie-test_technique/client/src/components/CreateTodoList/createTodoList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass CreateTodoListPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChange = event => {\n      this.props.todoListParam[event.target.name] = event.target.value;\n      console.log('=> ' + this.props.todoListParam[event.target.name] + ' : ' + event.target.value);\n    };\n\n    this.onSubmit = event => {\n      if (event.target.name === 'submit') {\n        console.log('user is: ' + JSON.stringify(this.props.user));\n        const jsonBody = {\n          'userId': this.props.user._id,\n          'title': this.props.todoListParam.title,\n          'description': this.props.todoListParam.description\n        };\n        console.log('handleClick: jsonBody: ' + JSON.stringify(jsonBody));\n        fetch(process.env.REACT_APP_API_URL + 'todolists/create', {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          mode: 'cors',\n          body: JSON.stringify(jsonBody)\n        }).then(res => {\n          //const propsCopy = this.props\n          console.log('we are here');\n\n          if (res.ok) {\n            res.json().then(jsonParsed => {\n              console.log(jsonParsed);\n              this.props.history.push('/list'); //console.log('token is' + jsonParsed.token)\n            });\n          } else {\n            console.log('res not OK: ' + JSON.stringify(res));\n          }\n        }).then(error => {\n          console.error(error);\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \" Create a Todo List \"), React.createElement(\"div\", {\n      className: \"form-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.onChange,\n      className: \"form-control\",\n      type: \"text\",\n      name: \"title\",\n      placeholder: this.props.todoListParam.title,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      onChange: this.onChange,\n      className: \"form-control\",\n      type: \"hugetext\",\n      name: \"description\",\n      placeholder: this.props.todoListParam.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"submit\",\n      onClick: this.onSubmit,\n      name: \"submit\",\n      className: \"ibtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" Create \"), React.createElement(\"button\", {\n      id: \"cancel\",\n      className: \"ibtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" Cancel \"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    todoListParam: {\n      title: 'TodoList title',\n      description: 'TodoList description'\n    }\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTodoListPage);","map":{"version":3,"sources":["/home/jeremy/Job/Briqueterie/monRepo/Labriqueterie-test_technique/client/src/components/CreateTodoList/createTodoList.js"],"names":["React","Component","connect","CreateTodoListPage","onChange","event","props","todoListParam","target","name","value","console","log","onSubmit","JSON","stringify","user","jsonBody","_id","title","description","fetch","process","env","REACT_APP_API_URL","method","headers","mode","body","then","res","ok","json","jsonParsed","history","push","error","render","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\n\nclass CreateTodoListPage extends Component {\n  onChange = (event) => {\n    this.props.todoListParam[event.target.name] = event.target.value\n    console.log('=> ' + this.props.todoListParam[event.target.name] + ' : ' + event.target.value)\n  }\n\n  onSubmit = (event) => {\n    if (event.target.name === 'submit') {\n      console.log('user is: ' + JSON.stringify(this.props.user))\n      const jsonBody = {\n        'userId': this.props.user._id,\n        'title': this.props.todoListParam.title,\n        'description': this.props.todoListParam.description\n      }\n      console.log('handleClick: jsonBody: ' + JSON.stringify(jsonBody))\n      fetch(process.env.REACT_APP_API_URL + 'todolists/create', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        mode: 'cors',\n        body: JSON.stringify(jsonBody)\n      })\n      .then(res => {\n        //const propsCopy = this.props\n        console.log('we are here')\n        if (res.ok) {\n          res.json()\n          .then(jsonParsed => {\n            console.log(jsonParsed)\n            this.props.history.push('/list')\n            //console.log('token is' + jsonParsed.token)\n          })\n        } else {\n          console.log('res not OK: ' + JSON.stringify(res))\n        }\n      })\n      .then(error => {\n        console.error(error)\n      })\n    }\n  }\n  render() {\n      return (\n        <div className=\"row\">\n        <div className=\"form-holder\">\n          <h3> Create a Todo List </h3>\n          <div className=\"form-content\">\n            <div className=\"form-items\">\n              <input onChange={this.onChange} className=\"form-control\" type=\"text\" name=\"title\" placeholder={this.props.todoListParam.title} required/>\n              <textarea onChange={this.onChange} className=\"form-control\" type=\"hugetext\" name=\"description\" placeholder={this.props.todoListParam.description}/>\n              <div className=\"form-button\">\n                <button id=\"submit\" onClick={this.onSubmit} name=\"submit\" className=\"ibtn\"> Create </button>\n                <button id=\"cancel\" className=\"ibtn\"> Cancel </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    todoListParam: {\n      title: 'TodoList title',\n      description: 'TodoList description'\n    }\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTodoListPage)\n"]},"metadata":{},"sourceType":"module"}