{"ast":null,"code":"var _jsxFileName = \"/home/jeremy/Job/Briqueterie/example/my_react/src/components/Users/Home/home.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport './home.css';\n\nclass HomeUserPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.retrieveList = event => {\n      console.log('handleClick: userID: ' + this.props.user._id);\n      fetch('http://localhost:8080/todolists/' + this.props.user._id, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        mode: 'cors'\n      }).then(res => {\n        //const propsCopy = this.props\n        console.log('we are here');\n\n        if (res.ok) {\n          res.json().then(jsonParsed => {\n            console.log('lists received: ');\n            console.log(jsonParsed);\n            this.props.storeLists(jsonParsed);\n            this.setState({\n              user: this.props.user,\n              todolists: this.props.todolists\n            }); //console.log('token is' + jsonParsed.token)\n          });\n        } else {\n          console.log('error: ' + res);\n        }\n      }).then(error => {\n        console.error(error);\n      });\n    };\n\n    this.addList = event => {\n      const jsonBody = {\n        'userId': this.props.user._id,\n        'title': 'i am a new list'\n      };\n      console.log('handleClick: userID bis: ' + jsonBody.userId);\n      fetch('http://localhost:8080/todolists/create', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        mode: 'cors',\n        body: JSON.stringify(jsonBody)\n      }).then(res => {\n        //const propsCopy = this.props\n        console.log('we are here');\n\n        if (res.ok) {\n          res.json().then(jsonParsed => {\n            console.log(jsonParsed); //console.log('token is' + jsonParsed.token)\n          });\n        } else {\n          console.log('error: ' + res);\n        }\n      }).then(error => {\n        console.error(error);\n      });\n    };\n  }\n\n  /*shouldComponentUpdate(nextPros) {\n    console.log('test 1 ok')\n    if (this.props.todolists !== nextPros.todolists) {\n      return true\n    }\n    return false\n  }*/\n  render() {\n    const listItems = this.props.todolists.map(d => React.createElement(\"li\", {\n      key: d.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" d.title \"));\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"homebody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"homegrad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"homeheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"My \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" Home Page\"))), React.createElement(\"div\", {\n      className: \"homebutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.retrieveList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \" See all your todo lists \"), React.createElement(\"button\", {\n      onClick: this.addList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" et beh son pere \")), React.createElement(\"div\", {\n      className: \"homescreen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.todolists.map(function (d, idx) {\n      console.log('hey : ' + d.title);\n      return React.createElement(\"li\", {\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \" d.title \");\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log('mapStateToProps home.js : ' + state.user.username);\n  return {\n    user: state.user,\n    todolists: state.todolists\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    storeLists: lists => dispatch({\n      type: 'STORE_LISTS',\n      value: lists\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeUserPage);","map":{"version":3,"sources":["/home/jeremy/Job/Briqueterie/example/my_react/src/components/Users/Home/home.js"],"names":["React","Component","Fragment","connect","HomeUserPage","retrieveList","event","console","log","props","user","_id","fetch","method","headers","mode","then","res","ok","json","jsonParsed","storeLists","setState","todolists","error","addList","jsonBody","userId","body","JSON","stringify","render","listItems","map","d","title","state","idx","mapStateToProps","username","mapDispatchToProps","dispatch","lists","type","value"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\n\nimport './home.css'\n\nclass HomeUserPage extends Component {\n  retrieveList = (event) => {\n    console.log('handleClick: userID: ' + this.props.user._id)\n    fetch('http://localhost:8080/todolists/' + this.props.user._id, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      mode: 'cors',\n    })\n    .then(res => {\n      //const propsCopy = this.props\n      console.log('we are here')\n      if (res.ok) {\n        res.json()\n        .then(jsonParsed => {\n          console.log('lists received: ')\n          console.log(jsonParsed)\n          this.props.storeLists(jsonParsed)\n          this.setState({\n            user: this.props.user,\n            todolists: this.props.todolists\n          })\n          //console.log('token is' + jsonParsed.token)\n        })\n      } else {\n        console.log('error: ' + res)\n      }\n    })\n    .then(error => {\n      console.error(error)\n    })\n  }\n  addList = (event) => {\n    const jsonBody = {\n      'userId': this.props.user._id,\n      'title': 'i am a new list'\n    }\n    console.log('handleClick: userID bis: ' + jsonBody.userId)\n    fetch('http://localhost:8080/todolists/create', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      mode: 'cors',\n      body: JSON.stringify(jsonBody)\n    })\n    .then(res => {\n      //const propsCopy = this.props\n      console.log('we are here')\n      if (res.ok) {\n        res.json()\n        .then(jsonParsed => {\n          console.log(jsonParsed)\n          //console.log('token is' + jsonParsed.token)\n        })\n      } else {\n        console.log('error: ' + res)\n      }\n    })\n    .then(error => {\n      console.error(error)\n    })\n  }\n\n  /*shouldComponentUpdate(nextPros) {\n    console.log('test 1 ok')\n    if (this.props.todolists !== nextPros.todolists) {\n      return true\n    }\n    return false\n  }*/\n  render() {\n    const listItems = this.props.todolists.map((d) => <li key={d.title}> d.title </li>)\n    return (\n      <Fragment>\n      <div className=\"homebody\"></div>\n      <div className=\"homegrad\"></div>\n      <div className=\"homeheader\">\n        <div>\n          My <span> Home Page</span>\n        </div>\n      </div>\n      <div className=\"homebutton\">\n        <button onClick={this.retrieveList}> See all your todo lists </button>\n        <button onClick={this.addList}> et beh son pere </button>\n      </div>\n      <div className=\"homescreen\">\n      <ul>\n        {this.state.todolists.map(function(d, idx){\n          console.log('hey : ' + d.title)\n          return (<li key={idx}> d.title </li>)\n        })}\n      </ul>\n      </div>\n      </Fragment>\n      )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log('mapStateToProps home.js : ' + state.user.username)\n  return {\n    user: state.user,\n    todolists: state.todolists\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    storeLists: (lists) => dispatch({type:'STORE_LISTS', value: lists})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeUserPage)\n"]},"metadata":{},"sourceType":"module"}