{"ast":null,"code":"const initialState = {\n  user: {\n    username: '',\n    password: '',\n    emailAddress: '',\n    firstName: '',\n    lastName: '',\n    authToken: ''\n  },\n  todolists: [],\n  tasks: [],\n  currentList: ''\n};\n\nconst reducer = (state = initialState, action) => {\n  const newState = { ...state\n  };\n\n  if (action.type === 'STORE_USER') {\n    newState.user = action.value;\n  }\n\n  if (action.type === 'STORE_LISTS') {\n    action.value.forEach(function (item, index) {\n      let hasIt = false;\n\n      for (let i = 0; i < newState.todolists.length; i++) {\n        if (newState.todolists[i].title === item.title) {\n          console.log('found an existring ENTRY');\n          hasIt = true;\n        }\n      }\n\n      if (hasIt === false) {\n        newState.todolists.push(item);\n        console.log('item pushed');\n      } else {\n        console.log('item skipped');\n      }\n    });\n  }\n\n  if (action.type === 'REMOVE_LIST') {\n    for (let i = 0; i < newState.todolists.length; i++) {\n      if (newState.todolists[i]._id === action.value) {\n        newState.todolists.splice(i, 1);\n        console.log('an element as been removed at pos ' + i);\n      } else {\n        console.log(newState.todolists[i]._id + ' !== ' + action.value);\n      }\n\n      console.log('turn = ' + i);\n    }\n  }\n\n  if (action.type === 'STORE_CURRENT') {\n    newState.currentList = action.value;\n  }\n\n  if (action.type === 'STORE_TASKS') {\n    if (newState.tasks.length > 0 && action.value.listId !== newState.tasks[0].listId) {\n      newState.tasks.length = 0;\n      newState.tasks = action.value;\n    } else {\n      action.value.forEach(function (item, idx) {\n        let hasIt = false;\n\n        for (let i = 0; i < newState.tasks.length; i++) {\n          if (newState.tasks[i].name === item.name) {\n            hasIt = true;\n          }\n        }\n\n        if (hasIt === false) {\n          newState.tasks.push(item);\n          console.log('item pushed');\n        } else {\n          console.log('item skipped');\n        }\n      });\n    }\n  }\n\n  console.log('on a fini le reducer avec action = ' + action.type);\n  console.log('newState is now: ' + JSON.stringify(newState));\n  return newState;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/jeremy/Job/Briqueterie/monRepo/Labriqueterie-test_technique/client/src/store/reducer.js"],"names":["initialState","user","username","password","emailAddress","firstName","lastName","authToken","todolists","tasks","currentList","reducer","state","action","newState","type","value","forEach","item","index","hasIt","i","length","title","console","log","push","_id","splice","listId","idx","name","JSON","stringify"],"mappings":"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","sourcesContent":["const initialState = {\n  user: {\n    username: '',\n    password: '',\n    emailAddress: '',\n    firstName: '',\n    lastName: '',\n    authToken: ''\n  },\n  todolists: [],\n  tasks: [],\n  currentList: ''\n}\n\nconst reducer = (state = initialState, action) => {\n  const newState = {...state}\n  if (action.type === 'STORE_USER') {\n    newState.user = action.value\n  }\n  if (action.type === 'STORE_LISTS') {\n    action.value.forEach(function(item, index) {\n      let hasIt = false\n      for (let i = 0; i < newState.todolists.length; i++) {\n        if (newState.todolists[i].title === item.title) {\n          console.log('found an existring ENTRY')\n          hasIt = true\n        }\n      }\n      if (hasIt === false) {\n        newState.todolists.push(item)\n        console.log('item pushed')\n      } else {\n        console.log('item skipped')\n      }\n    })\n  }\n  if (action.type === 'REMOVE_LIST') {\n    for (let i = 0; i < newState.todolists.length; i++) {\n      if (newState.todolists[i]._id === action.value) {\n        newState.todolists.splice(i, 1)\n        console.log('an element as been removed at pos ' + i)\n      } else {\n        console.log(newState.todolists[i]._id + ' !== ' + action.value)\n      }\n      console.log('turn = ' + i)\n    }\n  }\n  if (action.type === 'STORE_CURRENT') {\n    newState.currentList = action.value\n  }\n  if (action.type === 'STORE_TASKS') {\n    if (newState.tasks.length > 0 && (action.value.listId !== newState.tasks[0].listId)) {\n      newState.tasks.length = 0\n      newState.tasks = action.value\n    }\n    else {\n      action.value.forEach(function(item, idx) {\n        let hasIt = false\n        for (let i = 0; i < newState.tasks.length; i++) {\n          if (newState.tasks[i].name === item.name) {\n            hasIt = true\n          }\n        }\n        if (hasIt === false) {\n          newState.tasks.push(item)\n          console.log('item pushed')\n        } else {\n          console.log('item skipped')\n        }\n      })\n    }\n  }\n\n  console.log('on a fini le reducer avec action = ' + action.type)\n  console.log('newState is now: ' + JSON.stringify(newState))\n  return newState\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}