{"ast":null,"code":"var _jsxFileName = \"/home/jeremy/Job/Briqueterie/monRepo/Labriqueterie-test_technique/client/src/components/TodoLists/todoLists.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass TodoListsPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClick = event => {\n      console.log('hello: ' + event.target.name);\n\n      if (event.target.name === 'delete') {\n        //this.props.listIdToRemove = event.target.value\n        fetch(process.env.REACT_APP_API_URL + 'todolists/' + event.target.value, {\n          method: 'DELETE',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          mode: 'cors'\n        }).then(res => {\n          //const propsCopy = this.props\n          console.log('then res fetch delete list');\n\n          if (res.ok) {\n            res.json().then(jsonParsed => {\n              console.log('return for delete: ' + jsonParsed);\n              console.log('stringified: ' + JSON.stringify(jsonParsed));\n              console.log('==> ' + jsonParsed.idRemoved);\n              this.props.removeList(jsonParsed.idRemoved);\n              this.setState({\n                todolists: this.props.todolists\n              });\n            });\n          } else {\n            console.log('error: ' + res);\n          }\n        }).then(error => {\n          console.log('error is: ');\n          console.error(error);\n        });\n      }\n\n      if (event.target.name === 'create') {\n        this.props.history.push('/createlist');\n      }\n\n      if (event.target.name === 'goto') {\n        console.log('about to store: ' + event.target.value);\n        this.props.storeCurrentList(this.props.list[event.target.value]);\n        this.props.history.push('/tasks');\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log('TodoListsPage fetch: ' + JSON.stringify(this.props.user));\n    fetch(process.env.REACT_APP_API_URL + 'todolists/' + this.props.user._id, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      mode: 'cors'\n    }).then(res => {\n      //const propsCopy = this.props\n      console.log('we are here: ' + JSON.stringify(res));\n\n      if (res.ok) {\n        res.json().then(jsonParsed => {\n          console.log('lists received: ');\n          console.log(jsonParsed);\n          this.props.storeLists(jsonParsed);\n          this.setState({\n            todolists: this.props.todolists\n          });\n        });\n      } else {\n        console.log('error: ' + res);\n      }\n    }).then(error => {\n      console.log('error is: ');\n      console.error(error);\n    });\n  }\n\n  render() {\n    if (this.props.user.username === '') this.props.history.push('/signin');\n\n    if (this.props.list.length <= 0) {\n      return React.createElement(\"div\", {\n        className: \"no-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \" You don't have any todolist to show \"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \" Why don't you \", React.createElement(\"button\", {\n        onClick: this.onClick,\n        name: \"create\",\n        className: \"pers-color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \" create \"), \" one ? \"));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"todolist-array\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \" All yours todolists \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"list-type2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.props.list.map((item, index) => React.createElement(\"li\", {\n        key: item.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.onClick,\n        name: \"goto\",\n        value: index,\n        className: \"other-list-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, item.title), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.onClick,\n        name: \"delete\",\n        value: item._id,\n        className: \"list-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \" Delete List \")))))));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    list: state.todolists,\n    listIdToRemove: 0\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    storeLists: lists => dispatch({\n      type: 'STORE_LISTS',\n      value: lists\n    }),\n    removeList: listId => dispatch({\n      type: 'REMOVE_LIST',\n      value: listId\n    }),\n    storeCurrentList: currentTitle => dispatch({\n      type: 'STORE_CURRENT',\n      value: currentTitle\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListsPage);","map":{"version":3,"sources":["/home/jeremy/Job/Briqueterie/monRepo/Labriqueterie-test_technique/client/src/components/TodoLists/todoLists.js"],"names":["React","Component","connect","TodoListsPage","onClick","event","console","log","target","name","fetch","process","env","REACT_APP_API_URL","value","method","headers","mode","then","res","ok","json","jsonParsed","JSON","stringify","idRemoved","props","removeList","setState","todolists","error","history","push","storeCurrentList","list","componentDidMount","user","_id","storeLists","render","username","length","map","item","index","title","mapStateToProps","state","listIdToRemove","mapDispatchToProps","dispatch","lists","type","listId","currentTitle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\n\nclass TodoListsPage extends Component {\n  componentDidMount() {\n    console.log('TodoListsPage fetch: ' + JSON.stringify(this.props.user))\n    fetch(process.env.REACT_APP_API_URL + 'todolists/' + this.props.user._id, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      mode: 'cors',\n    })\n    .then(res => {\n      //const propsCopy = this.props\n      console.log('we are here: ' + JSON.stringify(res))\n      if (res.ok) {\n        res.json()\n        .then(jsonParsed => {\n          console.log('lists received: ')\n          console.log(jsonParsed)\n          this.props.storeLists(jsonParsed)\n          this.setState({\n            todolists: this.props.todolists\n          })\n        })\n      } else {\n        console.log('error: ' + res)\n      }\n    })\n    .then(error => {\n      console.log('error is: ')\n      console.error(error)\n    })\n  }\n\n  onClick = (event) => {\n    console.log('hello: ' + event.target.name)\n    if (event.target.name === 'delete') {\n      //this.props.listIdToRemove = event.target.value\n      fetch(process.env.REACT_APP_API_URL + 'todolists/' + event.target.value, {\n        method: 'DELETE',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        mode: 'cors',\n      })\n      .then(res => {\n        //const propsCopy = this.props\n        console.log('then res fetch delete list')\n        if (res.ok) {\n          res.json()\n          .then(jsonParsed => {\n            console.log('return for delete: ' + jsonParsed)\n            console.log('stringified: ' + JSON.stringify(jsonParsed))\n            console.log('==> ' + jsonParsed.idRemoved)\n            this.props.removeList(jsonParsed.idRemoved)\n            this.setState({\n              todolists: this.props.todolists\n            })\n          })\n        } else {\n          console.log('error: ' + res)\n        }\n      })\n      .then(error => {\n        console.log('error is: ')\n        console.error(error)\n      })\n    }\n    if (event.target.name === 'create') {\n      this.props.history.push('/createlist')\n    }\n    if (event.target.name === 'goto') {\n      console.log('about to store: ' + event.target.value)\n      this.props.storeCurrentList(this.props.list[event.target.value])\n      this.props.history.push('/tasks')\n    }\n  }\n  render() {\n    if (this.props.user.username === '')\n      this.props.history.push('/signin')\n    if (this.props.list.length <= 0) {\n      return (\n        <div className=\"no-list\">\n          <h2> You don't have any todolist to show </h2>\n          <h3> Why don't you <button onClick={this.onClick} name=\"create\" className=\"pers-color\"> create </button> one ? </h3>\n        </div>\n      )\n    }\n    else {\n    return (\n      <div className=\"todolist-array\">\n      <h3> All yours todolists </h3>\n      <br/>\n      <div className=\"list-type2\">\n        <ol>\n        {this.props.list.map((item, index) => (\n          <li key={item.title}>\n            <button onClick={this.onClick} name=\"goto\" value={index} className=\"other-list-button\">{item.title}</button>\n            <div><button onClick={this.onClick} name=\"delete\" value={item._id} className=\"list-button\"> Delete List </button></div>\n          </li>\n        ))}\n        </ol>\n      </div>\n      </div>\n    )\n  }\n}\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    list: state.todolists,\n    listIdToRemove: 0\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    storeLists: (lists) => dispatch({type:'STORE_LISTS', value:lists}),\n    removeList: (listId) => dispatch({type:'REMOVE_LIST', value:listId}),\n    storeCurrentList: (currentTitle) => dispatch({type:'STORE_CURRENT', value:currentTitle})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListsPage)\n"]},"metadata":{},"sourceType":"module"}